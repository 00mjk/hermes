import lit
import os

# name: The name of this test suite.
config.name = 'Hermes'

config.test_format = lit.formats.ShTest(True)

# suffixes: A list of file extensions to treat as test files.
config.suffixes = ['.js']

if "icu_data" in lit_config.params:
    config.environment = { "ICU_DATA": lit_config.params["icu_data"] }

# Optionally execute in a different directory so the output files stay there.
if lit_config.params.has_key("test_exec_root"):
    config.test_exec_root=lit_config.params["test_exec_root"]

if lit_config.params["debugger_enabled"] == "1":
  config.available_features.add("debugger")

if lit_config.params["use_flowparser"] == "1":
  config.available_features.add("flowparser")
if lit_config.params["jit_enabled"] == "true":
  config.available_features.add("jit")
if lit_config.params["jit_disassembler_enabled"] == "true":
  config.available_features.add("jit_dis")

if lit_config.params["cpp_enabled"] == "1":
  config.available_features.add("cpp")

if lit_config.params["build_mode"] != "opt":
  config.available_features.add("debug_options")

# Note substitutions are applied in order.
# %hermesc must appear before %hermes, or else %hermes will substitute *inside* %hermesc
config.substitutions.append(("%FileCheck", lit_config.params["FileCheck"]))
config.substitutions.append(("%hermesc", lit_config.params["hermesc"]))
config.substitutions.append(("%hermes", lit_config.params["hermes"]))
config.substitutions.append(("%hdb", lit_config.params["hdb"]))
config.substitutions.append(("%hbc-deltaprep", lit_config.params["hbc_deltaprep"]))
config.substitutions.append(("%repl", lit_config.params["repl"]))
